//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.nebby1999.nebula:LayerIndexCodeGenerator
//     version 1.0.0
//     from ProjectSettings
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using UnityEngine;
namespace AC
{
    public struct LayerIndex
    {
        private static uint _assignedLayerMask;
        public static readonly LayerIndex invalidLayer = new LayerIndex(-1);
        public static readonly LayerIndex defaultLayer = GetLayerIndex("Default");
        public static readonly LayerIndex transparentFX = GetLayerIndex("TransparentFX");
        public static readonly LayerIndex ignoreRaycast = GetLayerIndex("Ignore Raycast");
        public static readonly LayerIndex mapElements = GetLayerIndex("MapElements");
        public static readonly LayerIndex water = GetLayerIndex("Water");
        public static readonly LayerIndex uI = GetLayerIndex("UI");
        public static readonly LayerIndex entityPrecise = GetLayerIndex("EntityPrecise");
        public static readonly LayerIndex pickups = GetLayerIndex("Pickups");
        private static readonly LayerMask[] _collisionMasks = CalculateCollisionMasks();
        public int intVal { get; private set; }
        public LayerMask mask => (intVal >= 0) ? (1 << intVal) : intVal;
        public LayerMask collisionMask => _collisionMasks[intVal];
        private static LayerIndex GetLayerIndex(string layerName)
        {
            LayerIndex layerIndex = default;
            layerIndex.intVal = LayerMask.NameToLayer(layerName);
            LayerIndex result = layerIndex;
            _assignedLayerMask |= (uint)(1 << result.intVal);
            return result;
        }
        private static LayerMask[] CalculateCollisionMasks()
        {
            LayerMask[] array = new LayerMask[32];
            for(int i = 0; i < 32; i++)
            {
                LayerMask layerMask = default(LayerMask);
                for(int j = 0; j < 32; j++)
                {
                    if(!Physics2D.GetIgnoreLayerCollision(i, j))
                    {
                        layerMask = (int)layerMask | (1 << j);
                    }
                }
                array[i] = layerMask;
            }
            return array;
        }
        private LayerIndex(int val)
        {
            intVal = val;
        }
    }
}
